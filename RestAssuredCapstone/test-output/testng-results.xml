<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-19T13:34:36Z" name="Suite" finished-at="2022-02-19T13:34:42Z" duration-ms="5906">
    <groups>
    </groups>
    <test started-at="2022-02-19T13:34:36Z" name="Test" finished-at="2022-02-19T13:34:42Z" duration-ms="5906">
      <class name="RestAssuredTestCase.TestT01_GET">
        <test-method signature="test_01()[pri:0, instance:RestAssuredTestCase.TestT01_GET@433defed]" started-at="2022-02-19T13:34:40Z" name="test_01" finished-at="2022-02-19T13:34:41Z" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01 -->
        <test-method signature="test_02()[pri:0, instance:RestAssuredTestCase.TestT01_GET@433defed]" started-at="2022-02-19T13:34:41Z" name="test_02" finished-at="2022-02-19T13:34:41Z" duration-ms="625" status="FAIL">
          <exception class="java.lang.SecurityException">
            <message>
              <![CDATA[class "org.hamcrest.Matchers"'s signer information does not match signer information of other classes in the same package]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.SecurityException: class "org.hamcrest.Matchers"'s signer information does not match signer information of other classes in the same package
at java.base/java.lang.ClassLoader.checkCerts(ClassLoader.java:1158)
at java.base/java.lang.ClassLoader.preDefineClass(ClassLoader.java:902)
at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1010)
at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at RestAssuredTestCase.TestT01_GET.test_02(TestT01_GET.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.SecurityException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02 -->
      </class> <!-- RestAssuredTestCase.TestT01_GET -->
      <class name="RestAssuredTestCase.Test_GET">
        <test-method signature="Get_Request()[pri:0, instance:RestAssuredTestCase.Test_GET@548a24a]" started-at="2022-02-19T13:34:39Z" name="Get_Request" finished-at="2022-02-19T13:34:40Z" duration-ms="1332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Request -->
      </class> <!-- RestAssuredTestCase.Test_GET -->
      <class name="RestAssuredTestCase.Test_POST">
        <test-method signature="PutRequest()[pri:0, instance:RestAssuredTestCase.Test_POST@1040be71]" started-at="2022-02-19T13:34:36Z" name="PutRequest" finished-at="2022-02-19T13:34:39Z" duration-ms="2626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PutRequest -->
      </class> <!-- RestAssuredTestCase.Test_POST -->
      <class name="RestAssuredTestCase.Test_PUT">
        <test-method signature="putRequest()[pri:0, instance:RestAssuredTestCase.Test_PUT@2a693f59]" started-at="2022-02-19T13:34:41Z" name="putRequest" finished-at="2022-02-19T13:34:42Z" duration-ms="640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putRequest -->
      </class> <!-- RestAssuredTestCase.Test_PUT -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
